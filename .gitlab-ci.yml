# For the project at https://git.magenta.dk/bevillingsplatform/bevillingsplatform

# For `docker push` to work, the following envionment variables have to set in
# the Gitlab UI.
# RELEASE_REGISTRY_USER
# RELEASE_REGISTRY_PASSWORD

stages:
  - lint-build
  - test
  - release
  - deploy

include:
  - project: 'labs/master-ci'
    ref: master
    file: '/project/docker.yml'

variables:
  # Project variables
  RELEASE_REGISTRY: docker.io
  RELEASE_REGISTRY_IMAGE: index.docker.io/magentaaps/bevillingsplatform

  IMAGE_SHA: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
  IMAGE_DEV: ${CI_REGISTRY_IMAGE}:dev

  IMAGE: magentaaps/bevillingsplatform
  IMAGE_TAG: ${IMAGE}:${CI_COMMIT_TAG}
  IMAGE_LATEST: ${IMAGE}:latest

# Lint stage
#############

# For now we execute the lint and build stage as one stage to speed up the
# pipeline. When it is possible to use a DAG for describing the relations
# (https://gitlab.com/gitlab-org/gitlab-ce/issues/47063), the lint jobs can be
# executed in its own stage where no further jobs depend on them.

.lint-default: &lint-default
  stage: lint-build
  image: python:3.7
  tags:
    - docker

lint:
  <<: *lint-default
  before_script:
    - pip3 install -r backend/requirements-test.txt
  script:
    - cd backend
    - black --check --diff .
    - flake8 .

docs:
  <<: *lint-default
  before_script:
    - pip3 install -r backend/requirements-test.txt
    - pip3 install -r backend/requirements.txt
  script:
    - sphinx-build docs/source /doc-build
  artifacts:
    paths:
      - doc-build


# Build stage
#############

build:
  stage: lint-build
  tags:
    - docker
    - privileged
  before_script:
    # Login to GitLab registry
    - echo ${CI_REGISTRY_PASSWORD} | docker login -u ${CI_REGISTRY_USER} --password-stdin ${CI_REGISTRY}
    - docker pull ${IMAGE_DEV} || true
  script:
    - docker build -f docker/Dockerfile --pull --tag ${IMAGE_SHA} --cache-from ${IMAGE_DEV} .
    - docker push ${IMAGE_SHA}


# Test stage
############


unit-test:
  stage: test
  image:
    name: ${IMAGE_SHA}
  tags:
    - docker
  services:
    - name: postgres:11
      alias: db
  variables:
    POSTGRES_USER: bev
    POSTGRES_PASSWORD: bev
    BEV_USER_CONFIG_PATH: $CI_PROJECT_DIR/dev-environment/dev-settings.ini
    COVERAGE_FILE: $CI_PROJECT_DIR/.coverage
  script:
    - cd /code/backend &&
      pytest
      --cov=core
      --cov=bevillingsplatform
      --junitxml $CI_PROJECT_DIR/junit.xml
      --cov-report html:$CI_PROJECT_DIR/coverage-html
      --cov-report term
      --cov-fail-under=100
      -p no:cacheprovider

  coverage: '/TOTAL.*\s+(\d+%)$/'
  artifacts:
    when: always
    paths:
      - $CI_PROJECT_DIR/coverage-html
    reports:
      junit: $CI_PROJECT_DIR/junit.xml


.integration-test:
  stage: test
  tags:
    - docker
  before_script:
    # Login to GitLab registry
    - echo ${CI_REGISTRY_PASSWORD} | docker login -u ${CI_REGISTRY_USER} --password-stdin ${CI_REGISTRY}
    - docker pull ${IMAGE_SHA}
  script:
    - # TODO run tests


# Release stage
###############

.release-default: &release-default
  stage: release
  variables:
    GIT_STRATEGY: none # We do not need the source code
  tags:
    - docker
    - privileged
  before_script:
    # Login to GitLab registry
    - echo ${CI_REGISTRY_PASSWORD} | docker login -u ${CI_REGISTRY_USER} --password-stdin ${CI_REGISTRY}
    - docker pull ${IMAGE_SHA}


release-dev:
  <<: *release-default
  only:
    - /develop/
  script:
    - docker tag ${IMAGE_SHA} ${IMAGE_DEV}
    - docker push ${IMAGE_DEV}


release-rc:
  <<: *release-default
  only:
    variables:
      # Matches all of SemVer 2.0.0
      - $CI_COMMIT_TAG =~ /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/
  script:
    # Login to Docker Hub registry
    - echo ${RELEASE_REGISTRY_PASSWORD} | docker login -u ${RELEASE_REGISTRY_USER} --password-stdin ${RELEASE_REGISTRY}
    - echo Tagging with ${IMAGE_TAG}
    - docker tag ${IMAGE_SHA} ${IMAGE_TAG}
    - docker push ${IMAGE_TAG}

release-master:
  <<: *release-default
  only:
    variables:
      # Matches <version core> from SemVer 2.0.0 BNF grammar. Ex. 2.3.4, but not 2.3.4-rc
      - $CI_COMMIT_TAG =~ /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/
  script:
    # Login to Docker Hub registry
    - echo ${RELEASE_REGISTRY_PASSWORD} | docker login -u ${RELEASE_REGISTRY_USER} --password-stdin ${RELEASE_REGISTRY}
    - echo Tagging with ${IMAGE_TAG}
    - docker tag ${IMAGE_SHA} ${IMAGE_TAG}
    - echo Tagging with ${IMAGE_LATEST}
    - docker tag ${IMAGE_SHA} ${IMAGE_LATEST}
    - docker push ${IMAGE_TAG}
    - docker push ${IMAGE_LATEST}


# Deploy stage
##############

.deploy-default: &deploy-default
  stage: deploy
  variables:
    GIT_STRATEGY: none
  tags:
    - docker
    - privileged
    # TODO fix tags


.deploy-dev:
  <<: *deploy-default
  only:
    - develop
  script:
    - echo Deploying ${IMAGE_DEV} to moradev.magneta.dk
    # TODO: push ${IMAGE_DEV} to moradev.magneta.dk


.deploy-rc:
  <<: *deploy-default
  only:
    - /release/.*/
  script:
    - echo Deploying ${IMAGE_RC} to moratest.magneta.dk
    # TODO: push ${IMAGE_RC} to moratest.magneta.dk


.deploy-master:
  <<: *deploy-default
  only:
    - tags
  script:
    echo Deploying ${IMAGE_LATEST} to morademo.magneta.dk
    # TODO: push ${IMAGE_LATEST} to morademo.magneta.dk
